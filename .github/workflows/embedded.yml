name: Embedded CI

on:
  push:
    branches: [ main ]
    paths:
    - 'embedded/**'
    - 'platformio.ini'
    - '.github/workflows/embedded.yml'
    - '.env.lieblingswelt'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Make .env file available in pipeline
      id: dotenv
      uses: falti/dotenv-action@master
      with:
        path: .env.lieblingswelt

    - name: Run PlatformIO using variables from env file
      run: pio run --environment esp32dev
      env:
        PLATFORMIO_BUILD_FLAGS: 
          -D VERSION=\"${{ steps.tag_version.outputs.new_tag }}\"
          -D MQTT_BROKER_HOST=\"${{ steps.dotenv.outputs.mqtt_broker_host }}\"
          -D MQTT_BROKER_PORT=\"${{ steps.dotenv.outputs.mqtt_broker_port }}\"
          -D MQTT_CONNECT_TOPIC=\"${{ steps.dotenv.outputs.mqtt_connect_topic }}\"
          -D MQTT_UPDATE_TOPIC=\"${{ steps.dotenv.outputs.mqtt_update_topic }}\"
          -D MQTT_DRAW_TOPIC=\"${{ steps.dotenv.outputs.mqtt_draw_topic }}\"

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        draft: false
        prerelease: false

    - name: Upload firmware bin to release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./.pio/build/esp32dev/firmware.bin
        asset_name: ${{ steps.dotenv.outputs.firmware_file_name }}
        asset_content_type: application/octet-stream
        
    - name: Publish update message to mqtt broker
      uses: juhrlass/mqtt-action@master
      with:
        protocol: mqtt
        host: ${{ steps.dotenv.outputs.mqtt_broker_host }}
        port: ${{ steps.dotenv.outputs.mqtt_broker_port }}
        topic: ${{ steps.dotenv.outputs.mqtt_update_topic }}
        message: ${{ steps.tag_version.outputs.new_tag }}
        username: 'pipeline'
