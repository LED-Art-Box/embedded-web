name: Embedded CI

on:
  push:
    branches: [ main ]
    paths:
    - 'embedded/**'
    - 'platformio.ini'
    - '.github/actions/build-and-upload-embedded.yml'
    - '.github/workflows/embedded.yml'
    - '.env'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

      #FIXME that's the place were we should build and run some tests before releasing 
      #this is here, so it doesn't create a release on failed build 
    - name: Run PlatformIO 
      run: pio run --environment esp32dev 

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        draft: false
        prerelease: false

    - uses: actions/checkout@v2
    - name: Build and upload Lieblingswelt Firmware
      uses: ./.github/actions/build-and-upload-embedded
      with:
        env-file-path: .env.lieblingswelt
        tag-name: ${{ steps.tag_version.outputs.new_tag }}
        upload-url: ${{ steps.create_release.outputs.upload_url }}
